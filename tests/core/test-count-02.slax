version 1.0;

output-method { indent "yes"; }
match / {
    <out> {
	mvar $a = "a";
	append $a += "b";
	append $a += "c";
	mvar $b = {
	    <b> "bee";
	}

	append $b += {
	    <c> "sea";
	}

	append $b += <d> "dee";

	<a> { copy-of $a; }
	<b> { copy-of $b; }

	set $b = { <test> "test"; }
	<b> { copy-of $b; }

	/* call main; */
    }
}

template main {
    <main> {
	mvar $x = {
	    call test4($line = 1);
	    call test4($line = 5);
	}

	mvar $y = {
	    call test4($line = 10);
	    call test4($line = 15);
	}

	trace $x;

	mvar $x1 = 4;
	append $x1 += 5;

	var $y1 = 10;

	append $x1 += $y;
	<x1> { copy-of $x1; }

	append $x += $y;
	append $y += $x;

	<x> {
	    copy-of $x;
	}
	<y> {
	    copy-of $y;
	}

 /*
	call test3();
	call test1();
	call test2();
 */
    }
}

template test4 ($line = 0) {
    var $z = {
	<error> {
	    <line> $line;
	    <message> "fake";
	}
	<error> {
	    <line> $line + 1;
	    <message> "fake";
	}
	<error> {
	    <line> $line + 2;
	    <message> "fake";
	}
	<error> {
	    <line> $line + 3;
	    <message> "fake";
	}
    }

    trace $z;

    copy-of $z;
}

template test1 {
    mvar $test = 10;
    <test1> $test;

    set $test = 20;
    <test1> $test;

    set $test = 30;
    <test1> $test;

    set $test = 40;
    <test1> $test;
}

template test2 {
    mvar $x = 0;

    for $i (1 ... 20) {
	set $x = $x + $i;
	<test2> $x;
    }
}

template test3 {
    mvar $errors;

    for $i (1 ... 20) {
	var $x := <error> {
	    <line> $i;
	    <message> "Shut 'er down Clancey!  She's a-pumping mud!";
	}
	append $errors += $x;
	trace $errors;
    }

    <errors> {
	copy-of $errors;
    }
}
