<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
  <xsl:output method="xml" encoding="ISO-8859-1"/>
  <xsl:variable name="targetId"/>
  <xsl:variable name="action"/>
  <xsl:template match="/">
    <xsl:apply-templates select="* |@*"/>
  </xsl:template>
  <xsl:template name="toto">
    <toto/>
  </xsl:template>
  <xsl:template name="add">
    <xsl:param name="type"/>
    <xsl:if test="$type = &quot;toto&quot;">
      <xsl:call-template name="toto"/>
    </xsl:if>
  </xsl:template>
  <xsl:template name="copy">
    <xsl:copy>
      <xsl:apply-templates select="node() |@*"/>
    </xsl:copy>
  </xsl:template>
  <xsl:template name="del">
    <!-- effacer ! -->
  </xsl:template>
  <xsl:template match="*[attribute::id and@id = &quot;&quot;]">
    <!-- attribute::type pour éviter de confondre l'absence d'attibute et
    la valeur nulle -->
    <xsl:choose>
      <xsl:when test="$action = &quot;del&quot;">
        <xsl:call-template name="del"/>
      </xsl:when>
      <xsl:when test="$action = &quot;add&quot;">
        <xsl:call-template name="copy"/>
        <xsl:call-template name="add">
          <xsl:with-param name="type">
            <xsl:text>toto</xsl:text>
          </xsl:with-param>
        </xsl:call-template>
      </xsl:when>
      <xsl:when test="$action = &quot;repl&quot;">
        <xsl:if test="$action = &quot;del&quot;">
          <xsl:call-template name="del"/>
        </xsl:if>
        <xsl:call-template name="add">
          <xsl:with-param name="type">
            <xsl:text>toto</xsl:text>
          </xsl:with-param>
        </xsl:call-template>
      </xsl:when>
    </xsl:choose>
  </xsl:template>
  <!-- liste des elements qui peuvent être édités, donc attribut id -->
  <xsl:template match="domain">
    <xsl:copy>
      <xsl:if test="not(@id)">
        <xsl:attribute name="id">
          <xsl:value-of select="generate-id()"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="add">
        <xsl:text>task</xsl:text>
      </xsl:attribute>
      <xsl:attribute name="del">
        <xsl:text>domain</xsl:text>
      </xsl:attribute>
      <xsl:apply-templates select="node() |@*"/>
    </xsl:copy>
  </xsl:template>
  <xsl:template match="name">
    <xsl:copy>
      <xsl:if test="not(@id)">
        <xsl:attribute name="id">
          <xsl:value-of select="generate-id()"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="replace">
        <xsl:text>PCDATA</xsl:text>
      </xsl:attribute>
      <xsl:apply-templates select="node() |@*"/>
    </xsl:copy>
  </xsl:template>
  <xsl:template match="task">
    <xsl:copy>
      <xsl:if test="not(@id)">
        <xsl:attribute name="id">
          <xsl:value-of select="generate-id()"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="replace">
        <xsl:text>PCDATA</xsl:text>
      </xsl:attribute>
      <xsl:attribute name="add">
        <xsl:text>task</xsl:text>
      </xsl:attribute>
      <xsl:apply-templates select="node() |@*"/>
    </xsl:copy>
  </xsl:template>
  <xsl:template match="*">
    <xsl:copy>
      <xsl:apply-templates select="node() |@*"/>
    </xsl:copy>
  </xsl:template>
  <xsl:template match="@*">
    <xsl:copy/>
  </xsl:template>
</xsl:stylesheet>
