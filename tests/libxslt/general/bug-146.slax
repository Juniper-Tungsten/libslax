/* Machine Crafted with Care (tm) by slaxWriter */
version 1.1;

output-method xml {
    encoding "windows-1251";
    indent "yes";
}
strip-space *;

key EMPTY_EN_CODE_COLLS {
    match /root/colls/goodcoll/goodcomb/@COL_ID[../@EN_CODE == ""];
    value ../../../@COL_COD;
}

key EMPTY_EN_CODE_COLRS {
    match /root/colls/goodcoll/goodcomb/@COL_ID[../@EN_CODE == ""];
    value concat(., ":", ../../../@COL_COD);
}

match / {
    <root> {
        for-each (/root/colls[key("EMPTY_EN_CODE_COLLS",@COL_COD)]) {
            copy-node {
                copy-of @*;
                
                for-each (key("EMPTY_EN_CODE_COLLS",@COL_COD) [generate-id(.) == generate-id(key("EMPTY_EN_CODE_COLRS", concat(., ":", ../../../@COL_COD)))]) {
                    <color> {
                        copy-of ../@TITLE | ../@RU_CODE | .;
                    }
                }
            }
        }
    }
}
