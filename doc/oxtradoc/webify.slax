version 1.1;

/*
 * Copyright (c) 2006-2011, Juniper Networks, Inc.
 * All rights reserved.
 * This SOFTWARE is licensed under the LICENSE provided in the
 * ../Copyright file. By downloading, installing, copying, or otherwise
 *  using the SOFTWARE, you agree to be bound by the terms of that
 * LICENSE.
 */

/*
 * This script turns the non-inlined version of slax-manual.html into
 * a <div> that can be loaded into nested HTML pages, such as
 * libslax.org/the-slax-language.  You'll first need to
 * "make SLAX_INLINE_ARGS= slax-manual-*.html" in build/doc/
 * to make the "right" html file, then run this script as
 *   ../slaxproc/slaxproc webify.slax slax-manual*.html foo.html
 * I will add all this to the Makefile.am when I can find time.
 */

output-method html;

match / {
    <div class="top"> {
	apply-templates html/body;
    }
}

template add ($tag, $style) {
    if ($tag) {
	element $tag {
	    attribute "style" {
		expr $style;
	    }
	    apply-templates @* | node();
	}
    } else {
	copy-node {
	    attribute "style" {
		expr $style;
	    }
	    apply-templates @* | node();
	}
    }
}

match div[@class == "section-number" || @class == "self-section-number"] {
    call add($tag = "span", $style = "color: grey");
}

match pre {
    var $style = {
	expr "background-color: #d0d0ff;";
	expr "margin-left: 15px;";
	expr "width: auto; ";
	expr "border-radius: 5px;";
	expr "-moz-border-radius: 5px;";
	expr "-webkit-border-radius: 5px;";
    }
    call add($style);
}

match table[contains(@class, "tt") || contains(@class, "full")
	    || contains(@class, "headers")] {
    var $style = {
	expr "vertical-align: top;";
	expr "border-style: outset;";
	expr "border-width: 1px;";
    }
    call add($style);
}

match table[contains(@class, "tt") || contains(@class, "full")
	    || contains(@class, "headers")]/*/tr/td {
    var $style = {
	expr "vertical-align: top;";
	expr "border-style: inset;";
	expr "border-width: 1px;";
    }
    call add($style);
}

match table[contains(@class, "tt") || contains(@class, "full")
|| contains(@class, "headers")]/*/tr/th {
    var $style = {
	expr "vertical-align: top;";
	expr "border-style: inset;";
	expr "border-width: 1px;";
    }
    call add($style);
}

match @* | node() {
    copy-node {
	apply-templates @* | node();
    }
}
